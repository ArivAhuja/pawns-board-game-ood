To be honest, there were limited things we would’ve changed in our design/implementation. After receiving our customer code, we were happy that we segmented all our objects into their own classes with their own interfaces, similarly to how they did. One big thing was that they didn’t provide all interfaces, but provided class implementations. They understood that this was bad design, but also reinforced that our code was designed well. We think that we did a good job separating the functionality from model/view/controller, but for example, our logic for mirroring the card influence should’ve been in the DeckFileParser instead of the view. Our customers let us know that they had dropped the class, so we did not have to make any changes to our code for them. On the other hand, like mentioned above, our providers were very responsive and we appreciated their quick responses, and willingness to change their code to the spec when needed.