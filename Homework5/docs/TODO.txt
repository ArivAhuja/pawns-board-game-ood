QUESTIONS

- Do you need to override functions when you implement an interface? Do we need the @Override
    annotation? Make sure everything is consistent.
- If a card of the same name (but maybe different values) is read in, do we store it as a new card
    or do we update the existing card, or do we ignore it?
- Should logic like autopass be in the Controller or Model? What about command line interpretation?
    I am pretty sure that goes in the Controller, but I am not sure about autopass and other things
    like that.

TODO

- Add tests for the Straegies
- Add the extra credit strategies
- Add the ^^ to the README

To D0 GUI
- add logic to controller similar to textual view
- make clicks more reponsive
- make pawns circles
- add a restart game functionality if you click "r"
- make cards display value instead of name and center it

BUGS
- 

Other To Do?
- make builder class?
- make customizable start ie choose board size in gui?


Checklist before sumbit
- No leaking implementation details
- No debug statements in final code
- No debug comments in final code
- Make sure interfaces have proper methods
- Check puublic vs private vs protected etc.
- Overrides are consistent
- Check that main class model, view, controller have descriptive java docs